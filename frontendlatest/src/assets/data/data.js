export const nav = [
  {
    id: 1,
    text: "Home",
    url: "/",
  },
  {
    id: 2,
    text: "About",
    url: "/about",
  },
  {
    id: 3,
    text: "Pages",
    url: "/pages",
  },
  {
    id: 4,
    text: "Blog",
    url: "/blog",
  },
  {
    id: 5,
    text: "Contact",
    url: "/contact",
  },
];
export const category = [
  {
    id: 1,
    category: "AgilesArbeiten",
    title: "Stay Calm And Surf",
    cover: "../images/category/ca1.png",
  },
  {
    id: 2,
    category: "CI/CD",
    title: "Becoming a Dragonfly",
    cover: "../images/category/ca2.png",
  },
  {
    id: 3,
    category: "Netwerken",
    title: "There's always light at the end of the tunnel",
    cover: "../images/category/ca3.png",
  },
  {
    id: 4,
    category: "Programierung",
    title: "Stay Calm And Surf",
    cover: "../images/category/ca4.png",
  },
  {
    id: 5,
    category: "SourceControlManagement",
    title: "There's always light at the end of the tunnel",
    cover: "../images/category/ca5.png",
  },
  {
    id: 6,
    category: "Tools",
    title: "Becoming a Dragonfly",
    cover: "../images/category/ca6.png",
  },
  {
    id: 7,
    category: "Test",
    title: "Stay Calm And Surf",
    cover: "../images/category/ca7.png",
  },
  {
    id: 8,
    category: "Technology",
    title: "There's always light at the end of the tunnel",
    cover: "../images/category/ca8.png",
  },
];
export const blog = [
  {
    id: 1,
    title: "Behavior-Driven-Development",
    desc: 'Da wir unsere Comics auch neuerdings in der Glaskugel anbieten möchten, nutzen wir die neuesten Methoden, hierzu möchte ich euch unser Vorgehen dabei beschreiben. Auf unserer Glaskugel-Website, auf der die Kunden Comics auswählen und kaufen können, bringen wir wöchentlich neue Funktionen heraus.In dieser Woche war es die Funktion die einzelnen Ausgaben in einer virtuellen Bibliothek zu speichern.\n\nBevor wir die neue Funktion jedoch veröffentlichten, beschlossen wir, sie gründlich zu testen, um sicherzustellen, dass diese ordnungsgemäß funktionierte. Dazu verwendete unser Glaskugelteam Test-Driven Development (TDD), bei dem sie zunächst Tests schrieben, um die erwarteten Ergebnisse der neuen Funktion zu beschreiben, bevor sie die Funktion selbst schrieben. So konnten sie sicherstellen, dass die Funktion die Anforderungen erfüllte und keine Fehler aufwies.\n\n Sie verwendeten auch BDD(Behavior-Driven-Development), bei dem sie die Tests aus der Perspektive des Benutzers schrieben. Statt nur technische Tests zu schreiben, beschrieben sie das Verhalten, das sie von der Funktion erwarteten, z.B. "Wenn der Benutzer einen Comic hinzufügt, sollte er in der virtuellen Bibliothek des Benutzers erscheinen". Dies half uns, sicherzustellen, dass die Funktion so entwickelt wurde, dass sie für den Benutzer intuitiv und nützlich war.\n\nNachdem wir die Funktion getestet und überarbeitet hatten, veröffentlichten wir diese schließlich auf unserer Glaskugel-Website. Unsere treuen Leser waren begeistert von der neuen Funktion und so könnt ihr eure Comics auch in der Glaskugel speichern und lesen.',
    category: "BDD",
    author : "Felix",
    cover: "https://www.expat-news.com/wp-content/uploads/2019/09/Forschung-2.jpeg",
    date: "APRIL 05, 2022",
  },

  {
    id: 2,
    title: "Agiles Arbeiten",
    desc: "Im Verlag der DevOps-Comicbücher haben wir uns entschieden, agiles Arbeiten zu implementieren, um flexibler und anpassungsfähiger auf Veränderungen reagieren zu können. Ein aktuelles Beispiel dafür ist die Veröffentlichung des Films 'Der verrückte Professor', was zu einem sprunghaften Anstieg der Nachfrage nach Comics zu dieser Geschichte geführt hat. Zusätzlich ist unsere Titelbilddesignerin Mandy krank geworden und wir haben gerade eine Druckerpresse angeschafft, die mit dem CMY-Farbschema statt dem RGB-Farbschema arbeitet. Diese Veränderungen erfordern uns, schnell und flexibel handeln zu können, um unsere Deadlines und Qualitätsstandards zu erfüllen. Agiles Arbeiten ermöglicht uns, dies zu tun, indem es uns erlaubt, schnell auf Veränderungen zu reagieren und unsere Prozesse anzupassen.\n\nIn unserem DevOps-Szenario, in dem wir einen Comic-Verlag betrachten, gibt es verschiedene agile Methoden, die wir anwenden können, um flexibel und anpassungsfähig zu arbeiten. Eine dieser Methoden ist Scrum, bei der das Team in sogenannten Sprints arbeitet, um bestimmte Ziele zu erreichen. Eine andere Methode ist Extreme Programming (XP), bei der die Schwerpunkte auf der kontinuierlichen Verbesserung der Qualität und der Zusammenarbeit des Teams liegen. Eine weitere Methode ist Kanban, bei der die Arbeit in Form von Karten visualisiert wird und das Team in der Lage ist, den Arbeitsfluss besser zu steuern und zu optimieren. Jede dieser Methoden hat ihre eigenen Stärken und kann in Abhängigkeit von den Anforderungen des Projekts und des Teams gewählt werden.Um diese Herausforderungen anzugehen, werden vier schwarze Bretter aufgehängt. Das Master-Board zeigt alle derzeitigen Herausforderungen, da sich die Probleme gegenseitig beeinflussen. Der Erhöhte Bedarf und die neue Druckerpresse beeinflussen sich gegenseitig...\n\nDer erste Ort könnte eine große Wand in der Nähe des Eingangs sein, wo das Master Whiteboard aufgehängt werden kann, damit jeder, der das Gebäude betritt, sofort einen Überblick über die aktuellen Herausforderungen hat.\n\nDer zweite Ort könnte ein Konferenzraum sein, der speziell für das Team, das sich mit dem erhöhten Bedarf an 'verrücktem Professor' Comics beschäftigt, reserviert ist. Hier könnte ein Whiteboard aufgestellt werden, auf dem die Schritte und Aufgaben für dieses Projekt festgehalten werden.\n\nDer dritte Ort könnte ein Aufenthaltsraum für die Mitarbeiter sein, in dem ein Whiteboard aufgehängt werden kann, auf dem die Schritte und Aufgaben für das Team, das Mandy ersetzt, während sie krank ist, festgehalten werden.\n\nDer vierte Ort könnte die Werkstatt sein, wo die neue Druckerpresse aufgestellt ist. Hier könnte ein Whiteboard aufgestellt werden, auf dem die Schritte und Aufgaben für das Team, das für die Umstellung der Prozesse auf die neue Druckerpresse verantwortlich ist, festgehalten werden.\n\nDas Master-Team könnte aus Vertretern aller Abteilungen bestehen, die an der Produktion der Comics beteiligt sind, wie z.B. Autoren, Zeichner, Setzer, Marketing und Vertrieb. Dieses Team trifft sich regelmäßig, um den Fortschritt der anderen Teams zu überwachen und sicherzustellen, dass die Projektziele erreicht werden.\n\nFür das Team, das sich mit dem erhöhten Bedarf beschäftigt, könnten vor allem Autoren und Zeichner ausgewählt werden, die schnell neue Inhalte erstellen können. Das Team für die Krankheit könnte aus Mitarbeitern bestehen, die schnell einspringen und die Aufgaben der kranken Mitarbeiter übernehmen können.\n\nDas Team für die neue Druckerpresse sollte aus Mitarbeitern bestehen, die sich mit der Technologie auskennen und in der Lage sind, die Prozesse schnell an die neue Ausrüstung anzupassen. Dies könnten Setzer, Drucker und technisches Personal sein.Es ist wichtig, dass die Teams aus Mitarbeitern bestehen, die über die erforderlichen Fähigkeiten und Kenntnisse verfügen, um die spezifischen Herausforderungen erfolgreich anzugehen. Es ist auch wichtig, dass die Teams regelmäßig kommunizieren und zusammenarbeiten, um sicherzustellen, dass sie auf dem gleichen Stand sind und dass die Projektziele erreicht werden.\n\nEin wichtiger Punkt bei der Zusammenstellung von Teams ist, dass die Mitglieder kompatibel und gut zusammenarbeiten können. Es ist wichtig, dass die Teammitglieder unterschiedliche Fähigkeiten und Erfahrungen haben, um eine gute Balance und Abdeckung aller notwendigen Aufgaben zu gewährleisten.\n\nMitarbeiter, die Probleme mit Zeitmanagement haben oder häufig krank sind, sollten möglicherweise nicht in Teams aufgenommen werden, da dies die Effizienz und Leistung des Teams beeinträchtigen kann. Auch Mitarbeiter, die Schwierigkeiten haben, sich in ein Team einzufügen oder die Arbeit anderer zu respektieren, sollten möglicherweise nicht in Teams aufgenommen werden.\n\nEs ist auch wichtig, dass die Teams eine ausgewogene Zusammensetzung aus verschiedenen Abteilungen und Rollen haben, um sicherzustellen, dass alle relevanten Perspektiven und Kenntnisse in die Entscheidungsfindung einbezogen werden.\n\nEs ist wichtig zu beachten, dass jeder Mitarbeiter einzigartig ist und es keine allgemeingültigen Regeln für die Zusammensetzung von Teams gibt. In einigen Fällen kann die Rolle des Mitarbeiters tatsächlich ausschlaggebend sein, in anderen Fällen kann es jedoch sinnvoll sein, auf den Charakter des Mitarbeiters zu achten. Es kann auch sinnvoll sein, chronisch kranke Mitarbeiter in Teams einzubeziehen, insbesondere wenn sie über spezielle Fähigkeiten und Kenntnisse verfügen, die für das Team von Nutzen sein können. Es ist jedoch wichtig, sicherzustellen, dass die Belastungen für diese Mitarbeiter nicht zu hoch sind und sie ausreichend unterstützt werden. Es ist wichtig, offen und ehrlich über die Fähigkeiten und Bedürfnisse jedes einzelnen Mitarbeiters zu kommunizieren, um sicherzustellen, dass das Team erfolgreich arbeiten kann\n\nDas Team würde sich regelmäßig treffen, um die aktuelle Situation zu besprechen und die Prioritäten festzulegen.\n\nDie Aufgaben, die am dringendsten erledigt werden müssen, werden auf das Kanban-Board geschrieben und in die 'To Do'-Spalte gestellt.\n\nJeder Mitarbeiter würde seine Aufgaben von der 'To Do'- in die 'Doing'-Spalte verschieben, wenn er damit beginnt.\n\nSobald eine Aufgabe erledigt ist, würde der Mitarbeiter sie in die 'Done'-Spalte verschieben.\n\nDas Team würde regelmäßig über die Fortschritte sprechen und sicherstellen, dass alle Aufgaben erledigt werden und dass keine Blockaden vorliegen.\n\nUm die Umstellung auf die neue Druckerpresse zu erleichtern, könnte man einen Arbeitsplatz für Drucker einrichten und sicherstellen, dass die Drucker mit dem CMYK-Farbschema vertraut sind.\n\nDer Archivar könnte die alten Ausgaben schneller finden und bereitstellen, indem er sie in eine besondere Kategorie einordnet und sie schneller zugänglich macht.\n\nDer Marketingbereich könnte schneller auf die veränderte Nachfrage reagieren, indem er den Vertrieb und die Werbekampagne anpasst.\n\nDer Autor und Showrunner könnten schneller neuen Content erstellen, indem sie enger mit dem Team zusammenarbeiten und sich regelmäßig treffen, um die Anforderungen und Prioritäten zu besprechen." ,
    category: "Agiles Arbeiten",
    cover: "http://0ut3r.space/2019/02/13/easy-gpg/gpgprocess.jpg",
    date: "MARCH 15, 2022",
  },
  {
    id: 3,
    title: "Scrum",
    desc: 'Das Team Aktion besteht aus dem Scrum Master "Johanna", dem ShowRunner "Jack" und den Autoren "Max", "Emma" und "Laura".\n\nSituation 1: Das Team arbeitet an der Entwicklung einer neuen Funktion für eine bestehende Anwendung. Der Product Owner "Jack" hat die Anforderungen für die neue Funktion definiert und sie in die Product Backlog eingetragen. In der Sprint-Planungs-Sitzung wählt das Team die Aufgaben aus dem Product Backlog für den aktuellen Sprint aus und schätzt die Aufwände. Der Scrum Master "Johanna" leitet die Sitzung und sorgt dafür, dass alle Regeln von Scrum eingehalten werden. Während des Sprints arbeiten die Entwickler "Max", "Emma" und "Laura" an den ausgewählten Aufgaben und halten tägliche Stand-up Meetings ab, um den Fortschritt zu besprechen. Am Ende des Sprints präsentiert das Team dem Product Owner "Jack" das Ergebnis und erhält Feedback. \n\nSituation 2: Während des Sprints stellt das Team fest, dass eine Aufgabe schwieriger als erwartet ist und mehr Zeit in Anspruch nimmt. Der Scrum Master "Johanna" organisiert eine Sprint-Review-Sitzung, in der das Team das Problem bespricht und eine Lösung findet. Der Product Owner "Jack" entscheidet, welche Aufgaben für den nächsten Sprint priorisiert werden sollten, um das Problem zu lösen. \n\nSituation 3: Der Product Owner "Jack" hat eine neue Anforderung, die dringend umgesetzt werden muss. Er organisiert eine Sprint-Planungs-Sitzung außerhalb des regulären Rhythmus, um die Anforderungen in das Sprint Backlog einzubringen. Das Team schätzt die Aufwände und der Scrum Master "Johanna" organisiert einen Sprint, um die Anforderungen zu erfüllen. Am Ende des Sprints wird das Ergebnis dem Product Owner "Jack" präsentiert und die Anforderungen als erfüllt markiert. \n\nIn allen drei Situationen arbeitet das Team eng mit dem Product Owner "Jack" zusammen, um die Anforderungen der Anwendung zu erfüllen und sicherzustellen, dass sie den Bedürfnissen des Kunden entsprechen. Der Scrum Master "Johanna" sorgt dafür, dass das Team die Regeln von Scrum einhält und dass alle Beteiligten auf dem gleichen Stand sind.',
    category: "Scrum",
    cover:
      "https://www.kindpng.com/picc/m/53-539760_scrum-logo-hd-png-download.png",
    date: "MARCH 15, 2022",
  },
  {
    id: 4,
    title: "Extremes Programmieren",
    desc:'Im Writing Room (Entwicklungsabteilung) arbeiten die vier Autoren (Programmierer) Emma, Max, Julia und David an zwei Comic-Heftreihen. Emma ist eine junge, talentierte Autorin, die gerade erst ihre Karriere im Verlagswesen begonnen hat. Max ist ein erfahrener Autor, der sich auf Action-Geschichten spezialisiert hat. Julia ist eine erfahrene Autorin, die sich auf romantische Geschichten spezialisiert hat und oft an der Heftreihe "Phillip liebt Nancy" arbeitet. David ist ein junger, talentierter Autor, der sich auf humorvolle Geschichten spezialisiert hat und oft in der Heftreihe "Der verrückte Professor" arbeitet. Das Team "Romantik", bestehend aus Julia und David, arbeitet an der Heftreihe "Phillip liebt Nancy", während das Team "Aktion", bestehend aus Emma und Max, an der Heftreihe "Der verrückte Professor" arbeitet. Beide Teams arbeiten nach der Methode XP (Extreme Programming) um die Arbeit an ihren Geschichten (dem Code) zu optimieren. \n\nIm Writing Room arbeitet das Team "Aktion" an der Comic-Heftreihe "Der verrückte Professor" und hat sich dafür entschieden, das Pair Programming anzuwenden. Beim Pair Programming teilen sich zwei Autoren (Emma und Max) eine Schreibmaschine und arbeiten gemeinsam an einer Geschichte. \n\nWenn Emma und Max an einer bestimmten Szene arbeiten, sitzen sie Seite an Seite an der Schreibmaschine. Emma beginnt mit dem Schreiben der ersten Zeile, während Max ihr über die Schulter schaut und Anmerkungen und Vorschläge macht. Sobald Emma die erste Zeile geschrieben hat, übernimmt Max und schreibt die zweite Zeile, während Emma ihm über die Schulter schaut und Anmerkungen und Vorschläge macht. So arbeiten sie sich gemeinsam durch die Szene, Zeile für Zeile. \n\nDas Team "Aktion" hat sich für Pair Programming entschieden, da es ihnen ermöglicht, die Arbeit effizienter und sicherer abzuschließen. Durch das ständige Überprüfen und Feedback geben, können sie schneller Fehler erkennen und beheben. Es ermöglicht ihnen auch, sich gegenseitig zu inspirieren und kreative Lösungen für schwierige Probleme zu finden. Es ist eine Methode, die es ihnen ermöglicht, die Qualität und die Effizienz ihrer Arbeit zu verbessern und schneller ihre Ziele zu erreichen\n\nXP (Extreme Programming) ist eine agile Methode, die sich auf die schnelle und flexible Entwicklung von Software konzentriert. Es geht darum, schnell und iterativ zu arbeiten, Feedback von Kunden und Teammitgliedern zu sammeln und schnell auf Veränderungen zu reagieren. In unserem Beispiel des Comic-Verlags könnte XP bedeuten, dass die Autoren eng mit dem Marketing-Team und dem Verlag zusammenarbeiten, um schnell auf die Nachfrage nach bestimmten Comics reagieren zu können. Sie arbeiten in kurzen Entwicklungszyklen, testen die Geschichten regelmäßig und passen sie entsprechend an, um sicherzustellen, dass die Comics den Erwartungen der Leser entsprechen. \n\nIn Extreme Programming (XP) ist Test-Driven Development (TDD) ein wichtiger Bestandteil. TDD beinhaltet das Schreiben von Tests für Code, bevor der Code selbst geschrieben wird. Dadurch wird sichergestellt, dass der Code die Anforderungen erfüllt und Fehler frühzeitig erkannt werden. Continuous Integration (CI) ist ein weiteres wichtiges Konzept in XP. CI beinhaltet das regelmäßige Integrieren von Codeänderungen in den gemeinsamen Code-Basis und das Ausführen von Tests, um sicherzustellen, dass die Änderungen die Anforderungen erfüllen und keine Konflikte mit dem bestehenden Code verursachen. \n\nIm Writing Room arbeitet das Team "Aktion" unter der Leitung des Projektmanagers Jack an der Comic-Heftreihe "Der verrückte Professor". Jack ist der Showrunner, der für die Planung der groben langfristigen Entwicklung der Geschichte und die Verbindung zum "Market Research" (Kunden) verantwortlich ist. Er erhält Feedback und gibt Epics an sein Team weiter. Emma und Max, die Autoren des Teams, erstellen daraufhin Checklisten für jede Szene der Geschichte. Bevor sie mit dem Schreiben beginnen, schreiben sie Tests, die überprüfen, ob die Geschichte diese Anforderungen erfüllt. Während sie schreiben, überprüfen sie ständig, ob die Geschichte den Tests entspricht. Dadurch können sie sicherstellen, dass die Geschichte den Anforderungen entspricht und frei von Fehlern ist, bevor sie sie abschließen. \n\nDurch die Anwendung von Test-Driven Development (TDD) und Pair Programming können Emma und Max sicherstellen, dass die Geschichte den Anforderungen entspricht und ihre Arbeit effizienter und sicherer abgeschlossen wird. Sie können schneller Fehler erkennen und beheben und sicherstellen, dass die Geschichte den Anforderungen des Kunden entspricht. Jack als der Showrunner und sein Team arbeiten eng zusammen, um die bestmögliche Geschichte für ihre Leser zu erstellen und damit erfolgreich zu sein.Im Writing Room arbeitet das Team "Romantik" unter der Leitung des Projektmanagers Sarah an der Comic-Heftreihe "Phillip liebt Nancy". Sarah ist die Showrunnerin, die für die Planung der groben langfristigen Entwicklung der Geschichte und die Verbindung zum "Market Research" (Kunden) verantwortlich ist. Sie erhält Feedback und gibt Epics an ihr Team weiter. Emma und Max, die Autoren des Teams, erstellen daraufhin Checklisten für jede Szene der Geschichte. Bevor sie mit dem Schreiben beginnen, schreiben sie Tests, die überprüfen, ob die Geschichte diese Anforderungen erfüllt. Während sie schreiben, überprüfen sie ständig, ob die Geschichte den Tests entspricht. \n\nIm Coffee Room hängt ein großes "Conspiracy Board" an der Wand, das wie ein Git-Repository funktioniert. Emma und Max können hier ihren Fortschritt der Geschichte „commiten“, indem sie ihre Änderungen auf die Pinnwand schreiben und wichtige Änderungen wie "Phillip ist geschäftlich ins Ausland gefahren" mit einem farbigen Pin kennzeichnen. Sie können auch Fäden zwischen verschiedenen Charakteren und Ereignissen ziehen, um den Fortschritt der Geschichte zu verfolgen. Beide Autoren "pullen" regelmäßig die neuen Infos von dem Board, bevor sie selbst commiten und sie reviewen das Board zweimal am Tag, um sicherzustellen, dass die Geschichte konsistent und logisch ist. Diese Methode hilft ihnen schneller Fehler zu erkennen und zu beheben und sicherzustellen, dass die Geschichte den Anforderungen des Kunden entspricht. \n\nIn unserem Beispiel verwendet das Team "Romantik" sowohl Test-Driven Development (TDD) als auch Behavior-Driven Development (BDD). Bevor sie mit dem Schreiben der Geschichte beginnen, erstellen die Autoren Emma und Max Checklisten, die sicherstellen sollen, dass die Geschichte bestimmte Anforderungen erfüllt. Dies ist ein Beispiel für TDD. Sie schreiben Tests, bevor sie den tatsächlichen Code schreiben und überprüfen dann, ob der Code den Tests entspricht. \n\nDie Showrunnerin Sarah gibt dem Team Epics, die die groben langfristigen Entwicklungen der Geschichte beschreiben und Verbindungen zum "Market Research" (Kunden) herstellt. Diese Epics sind ein Beispiel für BDD, da sie die Anforderungen des Kunden und das Verhalten der Anwendung in einer einfachen Sprache beschreiben, die sowohl für Entwickler als auch für Nicht-Entwickler verständlich ist',
    category: "Extremes Programmieren",
    cover:
      "https://trucksystems.ru/sites/default/files/inline-images/sitemaintenace111.jpg",
    author:"Anis",
    date: "February 20, 2022",
  },
  {
    id: 5,
    title: "Trelloboard",
    desc: 'Willkommen zurück zu einer weiteren Ausgabe unserer Comicbuchreihe.Heute möchte ich euch etwas über unseren Austauschmitarbeiter Anis erzählen.Anis kam aus dem weit entfernten Land Kumbadou, in welchen die Leute alles perfekt und so schnell wie möglich erledigen wollen. \n\nSie schlafen kaum und haben eine Faszination für die sogenannten Woltatz das sind Fahrzeuge mit großen Reifen, welche es ihnen ermöglichen ihre felsige Berglandschaft zu bereisen. \n\nWoltatz sind schnell, fast einhundert Mal so schnell wie du oder ich laufen können.Da jeder Einwohner in Kumbadou ein Woltatz möchte sind in den letzten Jahren große Fabriken entstanden um der Nachfrage hinterher zu kommen. \n\n Anis ist dort ein Chef und hat es jeden Tag gehasst, wenn Teile fehlten oder sich die Produktion in einem Teil der Fabrik verzögerte. \n\nDa die Kumbadouaner es hassen, wenn nicht alles perfekt läuft schloss sich Anis in sein Büro eine Woche lang ein, bis er die Lösung hatte. \n\nEine Übersicht(Trelloboard) über die einzelnen Werkstätten und Produktionsabschnitte der Fabrik, welche stündlich wenn nicht täglich von den einzelnen Mitarbeitern und Teams aktualisiert werden mussten. \n\nDadurch konnte Anis frühzeitig erkennen, wenn eine Werkstatt Unterstützung von anderen Werkstätten brauchte oder gerade nichts zu tun war. \n\nAls er mir das erzählte, war ich begeistert und bat ihn ein Konzept in unseren Verlag anzuwenden. \n\nKurze Zeit später produzierten wir so viele neue Comics, dass sich unsere Umsätze verfünffacht hatten und das alles nur dank Anis seiner Übersicht(Trelloboard).',
    category: "Stackoverflow",
    cover: "https://th.bing.com/th/id/R.2d41fe7796b6a2014d290d93a4729ad8?rik=AhdNvCuzci67UQ&pid=ImgRaw&r=0",
    date: "February 20, 2018",
  },
  {
    id: 6,
    title: "Pipelines",
    desc: 'Im DevOps-Comic-Verlag bringen die fleißigen Autoren jede Woche brandneue Hefte der Reihen "Der verrückte Professor" und "Phillip liebt Nanny" heraus und jeden Monat spannende Bücher wie "Das Geheimnis des verlorenen Schatzes" und "Die Abenteuer von Superhelden-Team". Um sicherzustellen, dass die Geschichten konsistent und von höchster Qualität sind, setzt der Verlag auf die Nutzung von Pipelines. In diesem Kapitel werden wir uns detailliert die Schritte der Continuous Integration (CI), Continuous Testing (CT) als Teil der CI/CD und Continuous Deployment (CD) ansehen und erklären, wie sie im DevOps-Comic-Verlag eingesetzt werden. Am Ende des Kapitels werden wir uns die Vorteile und Nachteile des vorgestellten Ansatzes ansehen." \n\n"Die CI-Pipeline ist der erste Schritt im Prozess des DevOps-Comic-Verlags. Die Autoren (Emma, Jack und Julia , David) treffen sich zweimal am Tag an einer gemeinsamen Pinnwand (beispielsweise in Form eines physischen Pinnwand mit Notizen, Pins und Fäden) und reviewen und aktualisieren das "Storyboard" der Comics und Bücher. Dieser Prozess sorgt dafür, dass die Geschichten konsistent bleiben und Fehler frühzeitig erkannt werden. \n\nWenn ein Autor Änderungen am Storyboard vornimmt, wird automatisch ein dieses Vorgehen gestartet, welches die Änderungen auf Richtigkeit und Konsistenz überprüft. Wenn das Vorgehen erfolgreich ist, werden die Änderungen in das gemeinsame Repository eingefügt und die anderen Autoren werden benachrichtigt. \n\nDieser Prozess der ständigen Integration der Änderungen sorgt dafür, dass die Comics und Bücher immer auf dem neuesten Stand sind und Fehler frühzeitig erkannt werden. Es ermöglicht auch eine schnellere Zusammenarbeit und Kommunikation innerhalb des Teams und sorgt für eine effizientere Arbeitsweise." \n\nDie CD-Pipeline, auch als Deployment-Pipeline bekannt, ist der letzte Schritt im CI/CD-Prozess im DevOps-Comic-Verlag. Es handelt sich um den Prozess, in dem die Comics und Bücher tatsächlich gedruckt und an die Geschäfte ausgeliefert werden. \n\nDer Prozess beginnt mit dem Drucken der Comics und Bücher, bei dem die Druckerpressen sichergestellt werden, dass die richtige Farbpalette und die richtigen Aufkleber verwendet werden. Sobald die Druckprozesse abgeschlossen sind, werden die Comics und Bücher in Kartons verpackt und an die Läden ausgeliefert. \n\nDie CD-Pipeline ist automatisiert und parallel zur CT-Pipeline. Sobald die Tests erfolgreich abgeschlossen sind, werden die Comics und Bücher automatisch gedruckt und an die Läden ausgeliefert. Dieser Prozess ermöglicht es dem DevOps-Comic-Verlag, schnell und effizient auf Änderungen zu reagieren und gleichzeitig die Qualität der Produkte zu gewährleisten." \n\n"Das Verwenden von CI/CD-Pipelines hat sowohl Vorteile als auch Nachteile im DevOps-Comic-Verlag. Ein wesentlicher Vorteil ist die Fähigkeit, schnell und effizient auf Änderungen zu reagieren und gleichzeitig die Qualität der Produkte zu gewährleisten. Durch die Automatisierung der Prozesse wird auch die Fehlerwahrscheinlichkeit reduziert und die Zeit, die für manuelle Schritte aufgewendet werden muss, verringert. \n\nEin Nachteil kann sein, dass die Implementierung von CI/CD-Pipelines eine Initialinvestition erfordert und dass es Zeit und Ressourcen benötigt, um sie einzurichten und aufrechtzuerhalten. Es ist auch wichtig zu beachten, dass es unterschiedliche Grade der Integration von Pipelines in Unternehmen gibt und dass es für manche Unternehmen möglicherweise nicht die beste Lösung ist. \n\nInsgesamt ist die Verwendung von CI/CD-Pipelines ein wertvolles Werkzeug im DevOps-Comic-Verlag, um schnell und effizient auf Änderungen zu reagieren, die Qualität der Produkte zu gewährleisten und die Fehlerwahrscheinlichkeit zu reduzieren. Es ist jedoch wichtig, die spezifischen Anforderungen des Unternehmens zu berücksichtigen und die potenziellen Kosten und Ressourcenaufwendungen sorgfältig abzuwägen, bevor eine Entscheidung getroffen wird.',
    category: "Pipelines",
    cover: "https://www.invensislearning.com/blog/wp-content/uploads/2020/07/How-to-Build-a-DevOps-Pipeline-What-are-CI-CD-Pipelines.jpg",
    date: "February 20, 2018",
  },
  {
    id: 7,
    title: "Git-Lab",
    desc: 'Willkommen zurück meine lieben Comicbuchfans. \n\n Letztens hatte ich wieder einen merkwürdigen Traum, in welchem mir meine Oma eine Geschichte erzählte und die lautete folgendermaßen: \n\nEs war einmal ein kleines Unternehmen, das viele Computerprogramme entwickelte. Die Programmierer arbeiteten hart daran, ihr Code zu schreiben und zu verbessern, aber sie hatten immer Schwierigkeiten, ihre Arbeit zu organisieren. Sie benutzten viele verschiedene Computer und manchmal arbeiteten sie von unterschiedlichen Orten aus. Eines Tages entdeckten sie Gitlab. Gitlab ist ein Werkzeug, mit dem man Code auf einfache Weise organisieren und teilen kann. Mit Gitlab konnten die Programmierer ihre Arbeit an einem zentralen Ort speichern, an dem jeder sie einfach finden und bearbeiten konnte. Außerdem konnten sie mit Gitlab sehen, wer welche Änderungen an ihrem Code vorgenommen hatte und jederzeit zu einer früheren Version zurückkehren, falls etwas schiefging. Die Programmierer waren begeistert von Gitlab und konnten nun viel schneller und einfacher zusammenarbeiten. Sie konnten ihre Projekte schneller abschließen und sogar neue Projekte starten, weil sie nicht mehr so viel Zeit damit verbrachten, ihre Arbeit zu organisieren. Die Moral der Geschichte ist, dass Gitlab ein wunderbares Werkzeug ist, um die Zusammenarbeit und Organisation bei der Arbeit an Computerprogrammen zu verbessern.',
    category: "Git-Lab",
    cover: "https://www.almtoolbox.com/blog/wp-content/uploads/2018/02/gitlab-logo-purple.jpg",
    date: "February 20, 2022",
  },
  {
    id: 8,
    title: "Jenkins",
    desc:'Ja, klar! Im Comic-Buch-Verlag werden Comics produziert, hergestellt und vertrieben. Um diesen Prozess zu automatisieren, wurde Jenkins eingestellt. Jenkins hat die Aufgabe, jeden Schritt in der Produktionskette durchzuführen, vom Schreiben der Geschichten bis zum Drucken, Transportieren und Vertreiben der Comics. Um sicherzustellen, dass die Geschichten den Anforderungen entsprechen, müssen sie Unit-Tests bestehen, bevor sie zum Drucken weitergegeben werden. Außerdem müssen sie Integrationstests bestehen, um sicherzustellen, dass alles, von der Druckerpresse bis zu den Verkaufsetiketten und Lieferadressen, funktioniert. Jenkins ist wie ein Assistent, der jeden Schritt sorgfältig durchführt, um den Prozess reibungslos und effizient zu gestalten. \n\n\n\nJa, klar! Im Comic-Buch-Verlag werden Comics von Autoren geschrieben, die Geschichten werden dann automatisch von Jenkins verarbeitet. Jenkins hat die Aufgabe, jeden Schritt in der Produktionskette durchzuführen, vom Überprüfen der Geschichten auf Übereinstimmung mit der Lore (d.h. Rückwärtskompatibilität mit bereits bestehenden Geschichten) bis zum Drucken, Transportieren und Vertreiben der Comics. Um sicherzustellen, dass alles reibungslos funktioniert, müssen die Geschichten Unit-Tests bestehen, bevor sie zum Drucken weitergegeben werden. Außerdem müssen sie Integrationstests bestehen, um sicherzustellen, dass alles, von der Druckerpresse bis zu den Verkaufsetiketten und Lieferadressen, funktioniert. Jenkins ist wie ein Assistent, der jeden Schritt sorgfältig durchführt, um den Prozess reibungslos und effizient zu gestalten. \n\nGleiche Schritte - Jenkins übernimmt immer dieselben Schritte bei jeder neuen Geschichte. Das bedeutet, dass jede Geschichte die gleichen Tests durchläuft und dass es keine Fehler gibt, die durch menschliche Fehler entstehen. \n\nFrühzeitiger Abbruch der Kette bei einem Fehler - Jenkins überwacht jeden Schritt der Pipeline und kann bei einem Fehler sofort abbrechen. Dies bedeutet, dass Ressourcen geschont werden und dass Probleme schnell erkannt und behoben werden können. \n\nPipeline für mehrere Projekte - Jenkins kann seine Prozesse auf mehrere Projekte gleichzeitig anwenden. Das bedeutet, dass der Verlag seine Zeit und Ressourcen effizient nutzen und mehrere Comics gleichzeitig produzieren kann. \n\nVielleicht könnte man sagen, dass Jenkins wie ein Überwachungsroboter im Verlag arbeitet. Er überwacht jeden Schritt der Pipeline, um sicherzustellen, dass jede Geschichte schnell und effizient produziert wird und dass es keine Fehler gibt. Auf diese Weise kann der Verlag mehrere Comics gleichzeitig produzieren und seine Ressourcen effizient nutzen. \n\nReproduzierbarkeit: Jenkins hat einen sehr gewissenhaften Assistenten namens James, der genau weiß, wie die Schritte der Produktionskette durchgeführt werden müssen. Falls Jenkins einmal krank ist, kann James einfach seine Arbeit übernehmen und garantiert, dass die Schritte immer gleich ausgeführt werden. \n\nFrühzeitiger Abbruch: Der Drucker des Verlags gibt frühzeitig Rückmeldung, falls bei der Druckproduktion etwas nicht in Ordnung ist. So kann Jenkins oder James die Produktionskette unterbrechen, bevor großer Schaden entsteht. \n\nSkalierbarkeit: Der Verlag hat ein Event geplant, bei dem ein besonderes Heft gedruckt werden soll. Da die Prozesse sehr ähnlich sind, kann Jenkins die Produktionskette für das Sonderheft ohne Änderungen durchschleusen. \n\nFalscher Pfad: Einmal kam es vor, dass ein Mitarbeiter versehentlich das falsche Stockwerk in Jenkins Tagesablauf eingetragen hatte. Als Jenkins seine Runde durch die Stockwerke startete, war er auf einmal im falschen Stockwerk. Hier fand er keine Geschichten, sondern nur Archivmaterial und alte Ausgaben. Jenkins war verwirrt und wusste nicht, was er tun sollte. Nach einer Weile fiel ihm auf, dass er im falschen Stockwerk war. Er machte sich sofort auf den Weg zurück, um die fehlenden Geschichten zu finden. \n\nExterne Ressourcen: Der Verlag ist darauf angewiesen, dass die Fanclubs Feedback zu den aktuellen Ausgaben senden, damit sie auf die Bedürfnisse und Wünsche der Leser eingehen können. Dieses Feedback wird in Form einer Kolumne auf der letzten Seite des Heftes veröffentlicht. Aber manchmal geschieht es, dass die Fanclubs kein Feedback senden. Dann steht Jenkins vor einem Problem. Er kann seine Arbeit nicht vollständig erledigen, da die letzte Seite leer bleibt. Ohne das Feedback kann er nicht sicherstellen, dass die Geschichte die Leser begeistert. Jenkins und sein Team müssen sich dann auf die Suche nach neuen Ideen machen, um die letzte Seite zu füllen.',
    category: " Jenkins",
    cover: "https://licensecounter.jp/devops-hub/assets/images/products/logo-jenkins680_500.png",
    date: "February 20, 2022",
  },
  {
    id: 9,
    title: "Docker I.",
    desc: 'Als hippes und flexibles Unternehmen setzt der DevOpsComicBook-Verlag mobile Arbeitsplatzmodelle ein. Diese können Büro-Container für die Autoren und Grafiker sein. Es gibt kleine Film- und Fotostudios in denen Beiträge für die sozialen Medien erstellt werden können. Werkstätten in denen Prototypen für Fanartikel und Miniaturen für die Grafiker gebaut werden. Auch ein paar kleine Büchereien gibt es, in denen z.B. alle bisher erschienenen Hefte einzusehen sind oder die gesammelte Lore zu den einzelnen Heftreihen und Hintergrundgeschichten zu den Charakteren nachgelesen werden können und vieles mehr... \n\n\n\nEin großer Vorteil dieser **Container** ist es, dass sie sehr klein zusammengefaltet werden können und sehr günstig sind. Ist der **Container** zusammengepackt wird er **Image** genannt und kann in einem Lagerraum, dem sogenanntem **Hub** aufbewahrt werden, bis er wieder gebraucht wird. Natürlich kann kein Mitarbeiter in einem gefalteten Container arbeiten :-). Um häufige Transporte zwischen dem Lager und den Büroflächen zu vermeiden, sind in einer Ecke des Büros ein paar öfters benötigte **Images** gestapelt um sie bei Bedarf griffbereit zu haben.  \n\nMit der Zeit hat sich gezeigt, dass es immer wieder die gleichen Anforderungen an einen **Container** gibt. Viele **Container** brauchen einen Stuhl für den Mitarbeiter, andere wie die Studios brauchen spezielle Lampen und in den Büchereien sollen viele Regale aufgestellt werden. Diese Bauarten sind aber nur der erste **Layer**, die Büro- und Werkstatt**Container** sind zwar jeweils mit einem Stuhl ausgestattet, aber die Tische unterscheiden sich. Deshalb werden die Büros**Container** im zweiten **Layer** mit einem Schreibtisch und die Werkstätten mit einer Werkbank ausgerüstet. Hier ist aber noch nicht Schluss, auch die Grafiker und die Autoren haben unterschiedliche Bedürfnisse. Die Autoren brauchen eine Schreibmaschine in ihrem **Container** und die Grafiker Pinsel und Farben... ein weiterer Layer.  \n\n Manchmal passt aber keiner der vorgefertigten **Container** für eine Arbeitsplatz. In so einem Fall bekommt der Hausmeister eine Bauanleitung, das **Dockerfile** um ein weiteres **Layer** hinzuzufügen. Für die anstehende ComicCon sollen gerahmte Bilder von den beliebtesten Figuren produziert werden. In der Bauanleitung wird mit einem Grafiker**Container** gestartet, da hier schon die benötigten Pinsel und Farben vorhanden sind, und eine Säge für die Bilderrahmen beigelegt...',
    category: "Docker I.",
    cover: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSNXlt4vF8VL7mAMdr2pqiorqXd6Hc3-kUF2Q&usqp=CAU",
    date: "February 20, 2018",
  },
  {
    id: 10,
    title: "Docker II.",
    desc: 'Viele unserer Waren werden mit dem Schiff transportiert, so auch unsere Comicbücher.Diese werden verladen (Docker Image) in einen Container zum Transport (Docker Container)  auf ein Schiff (Docker Container pushen). \n\n Dieses Schiff fährt meinen Container in den Hafen (Docker Hub). \n\nIm Hafen kann nun jeder Lkw (andere Member) oder nur bestimmte Lkw (wenn private Repo) diesen Container laden und zu den Lesern transportieren (pullen) und ausladen, damit ihr alle unsere großartigen Geschichten lesen könnt. \n\nDamit mir der Container nicht abhandenkommt, erstellen wir eine Ladeliste (Docker Image). \n\n Sollten wir eine größere Menge an Ladung haben, für welche wir mehrere Container benötige, verpacke wir diese in ein Transportflugzeug, welche alles verbindet (Docker network).',
    category: "Docker II.",
    cover:
      "https://blog.kakaocdn.net/dn/bHIQ1y/btqD1PtC7MS/K6c0tDovIBLqECSadQDAc0/img.jpg",
    date: "February 20, 2022",
  },
  {
    id: 10,
    title: "Kubernetes I.",
    desc: 'Kubernetes ist eine Plattform, die es ermöglicht, Anwendungen in einem Cluster, ähnlich einem Buchladen, auszuführen und zu verwalten. Ein Cluster besteht aus mehreren Knoten (Nodes), die als Abteilungen des Buchladens betrachtet werden können, wie zum Beispiel Sifi, Romantik, Krimi usw. Jeder Knoten hat einen bestimmten Arbeitsspeicher (freie Plätze in den Regalen) zur Verfügung, der von den Anwendungen genutzt werden kann. \n\n In Kubernetes gibt es auch Namespaces, die ähnlich wie die Abteilungen für Comics und Comichefte im Buchladen organisieren. Ein Namespace kann zum Beispiel für die Comics verwendet werden und ein anderer für die Comichefte. \n\n Eine Anwendung, die in Kubernetes ausgeführt wird, wird als Pod bezeichnet. Ein Pod kann verglichen werden mit einem Comicbuch, das in den Regalen des Buchladens platziert wird. Ein Pod ist erst bereit, wenn es ein Preisschild erhalten hat. \n\n In Kubernetes gibt es auch die Möglichkeit, die gewünschte Anzahl von Pods für eine bestimmte Anwendung festzulegen. Dies kann verglichen werden mit der gewünschten Anzahl von Comicbüchern, die im Regal platziert werden sollen. Wenn die gewünschte Anzahl nicht erreicht wird, kann Kubernetes automatisch neue Pods erstellen, um die Anforderungen zu erfüllen. \n\n Der Scheduler in Kubernetes ist vergleichbar mit dem Einräumer im Buchladen. Er ist dafür verantwortlich, die Pods auf den Knoten zu verteilen und sicherzustellen, dass die gewünschte Anzahl von Pods auf jedem Knoten ausgeführt wird. \n\n Insgesamt ermöglicht Kubernetes die Verwaltung und Automatisierung der Anwendungen in einem Cluster, ähnlich wie es ein Buchladen mit seinen Abteilungen, Regalen und Einräumer tut.',
    category: "Kubernetes I.",
    cover:
      "https://softwareengineeringdaily.com/wp-content/uploads/2019/01/Kubernetes_New.png",
    date: "February 20, 2022",
  },
  {
    id: 11,
    title: "Kubernetes II.",
    desc: 'Ein weiteres Mal, begrüße ich euch zu einer Geschichte in unserer Comicbuchreihe.In unserem Königreich gibt es selbstverständlich auch eine Royale Armee, stets zu bewundern an unserem Nationalfeiertag marschieren die Soldaten die große Allee entlang und zeigen ihre Waffen zur Show. \n\n Eine gute Möglichkeit der Demonstration, der Einsatzfähigkeit unseres Militärs und damit die politischen Kritiker wissen, wofür unsere Steuergelder ausgegeben werden. \n\nKritik muss sich zu mindestens unser General Friedrich anhören, wenn er wieder eine Erhöhung des Etats im Parlament fordert. \n\nWozu auch, wir leben in friedlichen Zeiten und unser einstiger Feind das Königreich Bärgistan, nähert sich uns schon länger an und handelt schon lange mit uns im Frieden.Es beunruhigt nur dass Bärgistan im letzten Winter eine kleine Insel vom Königreich Blaugelbstenstein annektiert hat aber unser Außenminister Kunibert meinte, dass wird sich schon klären, Hauptsache wir bleiben im engen Kontakt mit Bärgistan.Kommen wir aber zurück zu unserer Royalen Armee (Kubernetescluster) und ihrer Hierarchie. \n\nUnser General Friedrich ist der Oberbefehlshaber (Kommunikations-/Managementtool wie kubectl), ein kampferfahrener Veteran des letzten Krieges mit Bärgistan.Die Royale Armee besteht aus mehreren Unterabteilungen, der Marine, dem Heer als auch der Luftwaffel (Nodes), diese sind spezialisiert, unterteilt in mehrere Einheiten wie den Korvetten oder Fallschirmjägern (Namespaces). \n\nAll diese Einheiten sind noch einmal in kleinster Form untergliedert, den Regimentern (Pods). \n\nZu beachten ist, dass all diese Einheiten bestimmte Freiheiten haben, um die Kommandos des General Friedrich zu befolgen.Beispielsweise sollte eine Einheit im Kampf vernichtet werden, rückt sofort eine nächste, identische nach.',
    category: "Kubernetes II.",
    cover:
      "https://miro.medium.com/max/768/0*ZExcXPZ5Wl8eGmR6.jpg",
    date: "February 20, 2022",
  },
  {
    id: 12,
    title: "Netzwerkadressen",
    desc: 'Als das Königreich, den unser DevOpsVerlag schon immer seine Heimat nennt, noch jung war hatte der traurige König Billi die Idee das Nachrichtensystem zu verbessern. Alle Straße in jeder Stadt wurden mit den Nummern eins bis zehn durchnummeriert, und ebenso die Häuser in den Straßen, auch mit den Nummern 1-10. Damals war das Königreich noch klein und nur selten zu besonderen Anlässen wurden überhaupt Briefe verschickt. Ein Brief konnte so einfach an 3.7 geschickt werden, das siebte Haus in der dritten Straße. \n\nNiemand konnte sich eine Stadt mit mehr als zehn Straßen auch nur vorstellen. Und als gute Untertanen, wäre auch kein Bürger auf die Idee gekommen eine Straße oder einem Haus die Nummer 11 zu geben. Das wäre gegen das Gesetz. Die Post war und ist für die Zustellung der Nachrichten und Briefe zuständig. Ein findiger Briefträger hatte schon sehr früh die Idee, die Nummernvergabe zu optimieren: \n\n- die Adeligen im Königreich, welche besonders oft Briefe bekommen, erhalten die Hausnummern 1-3 je nach Ansehen und Prestige.\n\n- der öffentliche Nachrichtenausrufer in jeder Stadt wohnt im Haus Nummer 4 \n\n- und alle Schulen bekommen die 5\n\n Am Anfang funktionierte das neue System sehr gut. Im Nachhinein war das aber sehr verschwenderisch. Nicht in jeder der möglichen 10 Straßen gab es eine Schule oder wohnten 3 Adlige. Und in jeder Stadt gab es, wenn überhaupt nur einen Ausrufer. \n\nEin Großteil der kleinen Ziffern blieb daher weitestgehend ungenutzt.\n\n Aber kein Problem mit 10 Häusern in 10 Straßen gäbe es ja 10 x 10 = 100 Hausnummern, mehr als genug? \n\nHeute, viele Jahrzehnte später, hat die Post allerdings ein großes Problem mit denfrüheren Entscheidungen. Immer mehr privat Personen fingen an sich gegenseitig Briefe zu schreiben. Und Händler und Handwerker beantragten eine Hausnummer für ihre Geschäfteund Werkstätten. Zunächst haben die Stadtplanner versucht nur kurze Straßen zu bauen und die einzelnen Häuser wurden immer größer um die raren Hausnummern optimal zu nutzen. Aber schnell stieß das System an seine Grenze. \n\n Das Gesetz des altehrwürdigen Königs "trauriger Billi" zu ändern stand natürlich außer Frage.Daher begann die Post die Hausnummern jeden Tag neu zu vergeben. Ein Mitarbeiter sichtete\n\n jeden Morgen die Post, die an diesem Tag auszutragen war und ein anderer Mitarbeiter ging durch die Stadt und nahm die Hausnummern von Häusern ab, die heute keine Post erhalten würden und brachten diese zu denen die heute eine Hausnummer benötigten.\n\n Die Ersten Tage herrschte großes Chaos und viele Briefträger und vor allem die Briefschreiber waren verzweifelt. Aber wieder hatte der findige Postmitarbeiter, inzwischen befördert, zum Nachrichtenchef eine findige Idee. Die Absender sollten nicht die Adresse 3.7 auf den Umschlag schreiben sondern die Namen der Personen oder Organisationen, an denen der Brief gerichtet ist.Ein unterzeichneter Abbovertrag wird also nicht mehr an die 3.7 geschickt, sondern an DevOps... \n\n Der Postbote des Morgens die Hausnummern vergibt schreibt in einer Liste, der **DNS** nun die gerade aktuellen Hausnummern, neben den Bewohnern. Soll die Post nun einen Brief an DevOps ausliefern, schaut ein Mitarbeiter auf der Post die aktuelle Hausnummer in der **DNS**Liste nach und vermerkt diese auf dem Briefumschlag. Jetzt endlich kann der Briefträger das Abbo zum DevOps Verlag bringen und die Mitarbeiter im DevOps haben einen weiteren Kunden dem sie wöchentlich ein Heft an eine sich ständig verändernde Adresse schicken müssen. Aber tatsächlich ist das System so gut, oder alle Einwohner so sehr daran gewohnt, dass der DevOps Verlag genau dasselbe System für die hausinterne Büro Post übernommen hat. Alle Etagen sind von 1- 10 durchnummeriert und jede Etage kann 1 bis 10 Räume haben. Die Etagen 8-10 und die Räume 8-10 sind dabei flexible und werden jeden Morgen abhängig nach anstehenden Aufgaben neu vergeben... und es werden Listen gepflegt, wo sich heute was befindet.',
    category: "Netzwerkadressen",
    cover:
      "https://th.bing.com/th/id/OIP.Y1daIhu8xWhWWHP7nN2b3QHaEH?pid=ImgDet&rs=1",
    date: "February 20, 2022",
  },  {
    id: 13,
    title: "Arrays",
    desc: 'In unseren Comicbüchern werden Gedanken- und Sprechblasen (**Datenstrukturen: Arrays und Listen**) verwendet, um die Gedanken und Aussagen der Comicbuch-Charaktere auf Papier zu bringen. In der Setzerei arbeiten wir daran, diese Blasen zu erstellen und zu organisieren, um die Geschichten unserer Comics zu erzählen. In diesem Prozess ist die Verwendung von Datenstrukturen von entscheidender Bedeutung.\n\n In der Setzerei erklären wir auch die verschiedenen Datentypen, die wir verwenden. Gedankenblasen sind wolkenförmig und Sprechblasen sind rund. Um den Unterschied zwischen Gedanken und Sprache dem Leser noch deutlicher zu machen, verwenden wir verschiedene Schriftarten, Italic für Gedankenblasen und normal für Sprechblasen.In der Setzerei gibt es vorgefertigte Käfige in Sprechblasenformat, die bewegliche Lettern aufnehmen können, dies hilft uns die Geschichten unserer Comics präziser und klarer darzustellen.\n\nDa die Form der Sprechblasen 💬 rund und die Form der Gedankenblasen 💭 wolkenförmig ist, können nur die entsprechenden Datentypen in die passenden Blasen aufgenommen werden. Beispielsweise können nur die in normaler Schriftart gedruckten beweglichen Lettern in die runden Sprechblasen aufgenommen werden, während nur die in kursiver Schriftart gedruckten beweglichen Lettern 🔤 in die wolkenförmigen Gedankenblasen passen. Dies verdeutlicht die Wichtigkeit der richtigen Verwendung von Datentypen in unserer Setzerei und hilft uns, die Geschichten unserer Comics präziser und klarer darzustellen.\n\nIn der Setzerei arbeiten wir mit unterschiedlichen Datenstrukturen, wie Arrays und Listen, um die Sprech- und Gedankenblasen unserer Comics zu erstellen und zu organisieren. \n\n- Arrays haben eine feste Länge, die sich bei der Erstellung des Arrays festlegen lässt. Sie sind effizient in Bezug auf Speicherverwendung und Zugriffszeiten. Arrays eignen sich besonders für Anwendungen, bei denen die Anzahl der Elemente im Voraus bekannt ist und häufig zufälliger Zugriff auf die Elemente erfolgt. \n\n- Listen haben keine feste Länge, die Sprechblasen werden aus Draht gebogen und die beweglichen Lettern mit Knetgummi fixiert. Listen sind flexibel in der Länge, aber umständlicher zu handhaben. \n\nIn der Setzerei müssen wir uns auch mit der Performance befassen, insbesondere in Bezug auf die Anforderungen unserer Comics. Für häufig erscheinende Comics, bei denen Zeit ein kritischer Faktor ist, werden wir Datenstrukturen mit höherer Performance wählen, wie Arrays, um schneller arbeiten zu können. Auf der anderen Seite, bei künstlerisch wertvollen Comics, bei denen die künstlerischen Aspekte im Vordergrund stehen, werden wir uns eher für Flexibilität entscheiden und Listen verwenden. \n\nin Comics werden Emotionen oft durch visuelle Elemente dargestellt, wie Tränen für Trauer, Adern Kreuz für Wut, Blitz für Zorn und Schweißtropfen für Scham.\n\n Genau, in dem Beispiel würde der Autor der Geschichte das Schlüsselwort verwenden, um dem Setzer in der Druckerei mitzuteilen, welches bewegliche Letter für den Druck verwendet werden soll. \n\nZum Beispiel, wenn der Autor "Trauer" als Emotion in einer Sprechblase beschreibt, würde er "Trauer" als Schlüssel in die Map eingeben und der Setzer würde das Symbol "Tränen" als das bewegliche Letter für den Druck verwenden.Auf diese Weise kann der Autor seine Intentionen und Vorstellungen über die Darstellung der Emotionen in der Geschichte klar und präzise übermitteln, ohne jedes Mal detailliert beschreiben zu müssen und der Setzer kann schnell und einfach die richtigen visuellen Elemente auswählen. \n\nEin Beispiel: \n\nDie beweglichen Lettern für Buchstaben und Zahlen werden in nummerierten Kästen aufbewahrt und können zum Beispiel alphabetisch geordnet werden. Dies entspricht einer geordneten Liste, da die Elemente in einer bestimmten Reihenfolge aufbewahrt werden. \n\nIm Gegensatz dazu werden die Emotionen in beschrifteten Schachteln aufbewahrt, die in einem Regal stehen. Die Reihenfolge der Schachteln im Regal ist jedoch willkürlich und die Emotionen sind nicht in einer bestimmten Reihenfolge aufbewahrt. Dies entspricht einer ungeordneten Liste, da die Elemente nicht in einer bestimmten Reihenfolge aufbewahrt werden. \n\nDieses Beispiel veranschaulicht den Unterschied zwischen geordneten und ungeordneten Listen und wie sie in verschiedenen Anwendungen verwendet werden können. Geordnete Listen eignen sich für Anwendungen, bei denen die Reihenfolge der Elemente wichtig ist, während ungeordnete Listen besser geeignet sind, wenn die Reihenfolge der Elemente nicht von Bedeutung ist.',
    category: "Array",
    cover:
      "http://www.codeadventurer.de/wp-content/uploads/2015/04/Funktionsaufruf.jpg",
    date: "February 20, 2022",
  },  {
    id: 14,
    title: "Scopes",
    desc: 'Da es beim DevOps ComicBook-Verlag immer sehr hektisch zugeht, gibt es auf dem Firmengelände viele Uhren (*Variablen*).Im Innenhof steht ein Uhrenturm (*globale Variable*) der vom gesamten Firmengelände gut zu sehen ist.\n\nIn den einzelnen Büros und Werkstätten, kann man den Uhrenturm sehr gut sehen, aber es gibt auch Wanduhren (*lokale Variable*).Die Wanduhren kann man nur sehen wenn, man in dem betreffenden Büro ist. Die Uhren sind alle sehr unzuverlässig, und zeigen nicht zwangsläufig dieselbe Zeit an.\n\n Im Büro der Autoren kann es nach der Wanduhr viel später sein als bei den Showrunner.Die meisten Mitarbeiter stellen die Uhr nach der Turmuhr. Aber auch die Turmuhr ist nicht zuverlässig. Daher haben alle Mitarbeiter stets einen langen Stock dabei, mit dem sie die Turmuhr umstellen können.\n\nSowohl auf dem Gelände als auch durchs Bürofenster. Macht das Jemand ändert sich die globale Zeit für alle Mitarbeiter.\n\nIn der Druckerei gibt es zeitkritische Abläufe. Daher müssten die Uhren synchron laufen. Daher werden die halbgedrucktem Seiten mit einem Zeitstempel(*Parameter*) nach deren Wanduhr, an die nächste Werkstatt weitergegeben, und die Uhr dort, nach dem Zeitstempel gestellt.',
    category: "Scopes",
    cover:
      "https://lacomunicacionmeestresa.files.wordpress.com/2009/02/burgo-de-osma-canon-del-rio-lobos-y-siguenza-151.jpg?w=900&h=1352",
    date: "February 20, 2022",
  },  {
    id: 15,
    title: " Bash",
    desc: 'Ein weiteres Mal begrüßen wir euch zu unserer heutigen Ausgabe "Traumwelten" Unsere Mitarbeiterin Ulrike hatte mir letztens von einem unglaublichen Traum erzählt.\n\n Da sie drei Kinder hat ist sie immer sehr müde, weshalb sie sich vorgenommen hatte das letzte Wochenende durchzuschlafen.Gesagt, getan, ganze zwei Tage schlief sie und träumte dabei von einer Welt ganz anders der Unseren. Menschen, welche sogenannte Computer anstatt Glaskugeln nutzten, mit Programmen, wovon Sie eines kennenlernte.Dieses hieß Bash und es erzählte ihr seine Geschichte:\n\n Es war einmal ein kleines Programm namens Bash. Bash lebte in einem Computer und seine Aufgabe war es, Befehle von den Menschen zu verstehen und sie auszuführen.\n\nEines Tages traf Bash ein neues Programm namens GUI (Graphical User Interface). GUI sah sehr hübsch aus mit all seinen bunten Knöpfen und Bildern, aber Bash war ein bisschen eifersüchtig, weil es nicht so hübsch aussah. \n\nDoch dann erkannte Bash, dass es etwas hatte, das GUI nicht hatte: die Macht, Befehle direkt einzugeben und so viel schneller zu arbeiten. Bash lernte, stolz darauf zu sein, wie es war und half den Menschen, ihre Computeraufgaben schneller und einfacher zu erledigen.\n\nVon da an lebten Bash und GUI glücklich zusammen und halfen den Menschen, ihre Computeraufgaben zu erledigen. Bash erkannte, dass es gut so war, wie es war und dass es wichtig war, stolz auf seine Einzigartigkeit zu sein.\n\nDas war die Geschichte von Bash, dem kleinen Programm, das lernte, stolz auf sich selbst zu sein. \n\nDiese Geschichte vom kleinen Bash, rührte Ulrike so sehr, dass sie darauf bestand das ich es euch erzähle aber schon merkwürdig eine Welt mit Computern anstatt Glaskugeln, wie soll man denn da seine Comics lesen können.',
    category: " Bash",
    cover:
      "https://th.bing.com/th/id/OIP.gPouUIoiCdymibo31s_iIwHaEK?pid=ImgDet&rs=1",
    date: "February 20, 2022",
  },  {
    id: 16,
    title: "Clean Coding",
    desc: 'Hallo ihr Lieben und Willkommen zurück zu unserer heutigen Ausgabe.Klein Otto der Sohn von Frau Mainzel, eine fleißige Redakteurin bei uns lernt in der Schule die Regeln, der korrekten Rechtschreibung.Denn ohne diese, könnten wir einander nicht verstehen.\n\n So wie es auf der Welt verschiedene Sprachen gibt und regionale Dialekte, so schreibt auch jede Person individuell.\n\n Damit wir uns alle besser verstehen können, gibt es Grundregeln, welche man sich mit einigen Hilfswörter und Prinzipien besser merken kan.Beispielsweise sollte man es intuitiv verstehen und einfach ändern können, wie dieses ComicBook.\n\nDu solltest es nie zu kompliziert schreiben und möglichst viel Geschriebenes wieder verwenden.\n\nDes Weiteren hilft es das Geschriebene erneut zu lesen und Korrekturen vorzunehmen, um dieses verständlicher und kürzer zu gestalten.Ganz nach dem Motto:"KISS; Keep-it-simple-and-stupid"!\n\nEbenso solltest du dich nicht nach dem Motto:"Dry; Dont-repeat-yourself", wiederholen und Code der ähnlich ist versuchen zusammen zu führen und wiederzuverwenden."YAGNI; You-arent-gonna-need-it", schreibe Aufgaben/Kapitel in kleineren Schritten und minimiere Überflüssiges!\n\nAber denke immer dran, ein anderer liest dein Geschriebenes und muss es verstehen, sowie du gerade dieses Heft liest!',
    category: "Clean Coding",
    cover:
      "https://www.phunware.com/wp-content/uploads/2018/01/blog-android-clean-coding-approach-featured.png",
    date: "February 20, 2022",
  },  {
    id: 17,
    title: "GPG-keys",
    desc: 'In unserer Glaskugelwelt gibt es die weißen und die schwarzen Magier (IT-Security und Hacker).\n\nDiese kämpfen um die Kontrolle aller Glaskugeln, weshalb fast jedes Unternehmen auch unser Comicbuchverlag einen weißen Magier besitzt, um die eigenen Glaskugeln und Nachrichten vor den schwarzen Magiern zu schützen.Die schwarzen Magier wollen nämlich alle Informationen der Welt lesen können umso die Gesellschaft kontrollieren und erpressen zu können. Mit ihren Mingeldings, kleinen pechschwarzen Wesen können sie Nachrichten stehlen und Glaskugeln übernehmen. Haben die Mingeldings deine Glaskugel übernommen, wird diese ganz schwarz und einzig die weißen Magier wissen, wie man diese lästigen Biester vertreibt.\n\nDa die weißen Magier aber nicht immer da sein können, gibt es Vorkehrungen und Tools welche den weißen Magiern, den Schutz der Glaskugeln und des Nachrichtenverkehrs erleichtern, die sogenannten Doblinge. Das sind kleine Wesen innerhalb der Glaskugelwelt, welche besenderst wichtige Nachrichten verifizieren und das läuft folgendermaßen ab.\n\nDie Doblinge bekommen eine Liste mit Passwörtern und nützlichen Informationen (GPG keyring), womit sie die Nachrichten entschlüsseln und dir vorlesen können (Private key), wogegen jeder mit dem öffentlichen Papyrus dir welche schicken kann (GPGkeys Public Key).\n\nDadurch können die schwarzen Magier deine Nachrichten nicht lesen, sollten diese von den Mingeldings gestohlen wurden sein.\n\nNatürlich gibt es noch viele weitere Bedrohungen, womit die schwarzen Magier versuchen ihr Ziel zu erreichen aber das erzählen wir euch in einer anderen Geschichte.',
    category:"GPG-keys",
    cover:
      "https://dobschat.io/wp-content/uploads/2013/05/GPG-Tools1-1.jpg",
    date: "February 20, 2022",
  },  {
    id: 18,
    title: "Funktionen",
    desc: 'Im Writing Room arbeitet das Team "Aktion" unter der Leitung des Projektmanagers Michael an der Comic-Heftreihe "Der verrückte Professor". Michael hat eine enge Beziehung zu einer Person, die äußerst bewandert in der "Lore" der Geschichten ist und Fragen zur Finanzsituation von Nancy oder dem Aufenthaltsort des verrückten Professors beantworten kann.\n\nWenn die Autoren des Teams eine Frage haben, die die Person sofort beantworten kann, ruft sie die Person synchron an und erhält sofort eine Antwort. Wenn die Frage jedoch komplexer ist und mehr Recherche erfordert, ruft die Person asynchron an und ruft zu einem späteren Zeitpunkt zurück, um die Autoren mit der notwendigen Information zu versorgen.\n\nDieser Ansatz ermöglicht es dem Team, effektiv zu arbeiten und gleichzeitig die Konsistenz und Logik der Geschichte sicherzustellen. Michael und das Team verwenden sowohl synchronen als auch asynchronen Ansätze, um sicherzustellen, dass sie die bestmöglichen Ergebnisse erzielen.',
    category: "Funktionen",
    cover:
      "https://i.pinimg.com/originals/bb/3e/b8/bb3eb8f6aa94f561acad20df069ccdfd.jpg",
    date: "February 20, 2022",
  },{
    id: 19,
    title: "Objektorientiertes Programmieren",
    desc: 'In unserem Comic-Book-Verlagsteam haben wir sehr viele und begabte Mitarbeiter, darunter Tim ein begabter Mitarbeiter unserer Glaskugel-Abteilung.\n\nWährend eines Kurses lernte Tim, wie man Software-Projekte in Glaskugeln effizient entwickelt und implementiert, indem man Methoden wie Continuous Integration und Continuous Deployment anwendet. Er erkannte, dass die objektorientierte Programmierung (OOP) ein wichtiger Bestandteil dieser Methoden ist, da sie es ermöglicht, komplexe Projekte in kleine, unabhängige und wiederverwendbare Teile zu unterteilen.\n\nTim begann, seine Kenntnisse der OOP in sein Projekt einzubringen und erstellte Klassen für die verschiedenen Elemente des Comic-Verlags, wie z.B. die Charaktere, Panels, Geschichten und die Verwaltung. Durch die Verwendung von OOP-Konzepten wie Vererbung und Polymorphismus, konnte er sicherstellen, dass alle Teile des Projekts perfekt miteinander arbeiteten und einfach zu testen und zu warten waren.\n\nDurch die Anwendung von DevOps-Methoden und OOP konnte Tim seinen Traum verwirklichen und unseren Comic-Book-Verlag und dessen Glaskugel-Abteilung zur Erfolgreichsten in der ganzen Welt zu machen. Seine Verwaltungssoftware war robust und skalierbar, was es ihm ermöglichte, schnell auf die wachsenden Anforderungen des Verlags zu reagieren. Tim war stolz darauf, ein erfolgreicher DevOps-Glaskugelengineer zu sein, dank seiner Entscheidung für den Kurs und seinem Einsatz der objektorientierten Programmierung.',
    category: "Objektorientiertes Programmieren",
    cover:
      "https://th.bing.com/th/id/R.d7a193588dedd9d560d102c2f4ace63e?rik=xHO%2blN7ocofbnw&riu=http%3a%2f%2fwww.denisreis.com%2fwp-content%2fuploads%2f2012%2f05%2fobjektorientierte-programmierung.jpg&ehk=fPKDhYCaCyjgcE%2fT4LmG0z3igtJH6V72MriAjm0FhOg%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1",
    date: "February 20, 2022",
  },  {
    id: 20,
    title: "Merge-Konflikte",
    desc: 'An der Heftreihe, der **App**, "Phillip liebt Nancy", arbeiten zwei Teams von Autoren oder auch manchmal die **Coder** genannt. Das "Action" Team mit Emma und Max ist gut darin Spannung aufzubauen und wilde Verfolgungsjagden und Kämpfe zu schildern, während das "Romantik" Team aus Julia und David auf tiefgreifende Dialoge und gefühlvolle Beziehungen zwischen den einzelnen Charakteren spezialisiert ist. Da die Hefte wöchentlich erscheinen, herrscht stets großer Zeitdruck und beide Teams arbeiten parallel an der Geschichte.\n\nNun kommt es öfter zu einer Situation, dem **Merge-conflict**, wenn beide Teams versuchen die Geschichte wieder zusammenzuführen. Team "Action" hat einen Kampf geschrieben in dem Phillip schwer verletzt wurde und nun im Krankenhaus liegt. Gleichzeitig hat Team "Romantik" die Geschichte derart vorangetrieben, dass Phillip und Nancy endlich das langersehnte Rendezvous haben.\n\nLeider kann Phillip nicht gleichzeitig im Krankenhaus und beim Candle-Light-Dinner sein. Dieser Konflikt muss aufgelöst werden. Es könnte der bessere Handlungsstrang, den **Code** beibehalten und der andere verworfen werden oder etwas geändert werden, so dass die Geschichte wieder passt.',
    category: "Merge-Konflikte",
    cover:
      "https://th.bing.com/th/id/OIP.3sjGZvpUoZYvGTHlPMWrmgHaEl?pid=ImgDet&rs=1",
    date: "February 20, 2022",
  },
  {
    id: 21,
    title: "Behavior-Driven-Development",
    desc: 'Da wir unsere Comics auch neuerdings in der Glaskugel anbieten möchten, nutzen wir die neuesten Methoden, hierzu möchte ich euch unser Vorgehen dabei beschreiben. Auf unserer Glaskugel-Website, auf der die Kunden Comics auswählen und kaufen können, bringen wir wöchentlich neue Funktionen heraus.In dieser Woche war es die Funktion die einzelnen Ausgaben in einer virtuellen Bibliothek zu speichern.\n\nBevor wir die neue Funktion jedoch veröffentlichten, beschlossen wir, sie gründlich zu testen, um sicherzustellen, dass diese ordnungsgemäß funktionierte. Dazu verwendete unser Glaskugelteam Test-Driven Development (TDD), bei dem sie zunächst Tests schrieben, um die erwarteten Ergebnisse der neuen Funktion zu beschreiben, bevor sie die Funktion selbst schrieben. So konnten sie sicherstellen, dass die Funktion die Anforderungen erfüllte und keine Fehler aufwies.\n\nSie verwendeten auch BDD(Behavior-Driven-Development), bei dem sie die Tests aus der Perspektive des Benutzers schrieben. Statt nur technische Tests zu schreiben, beschrieben sie das Verhalten, das sie von der Funktion erwarteten, z.B. "Wenn der Benutzer einen Comic hinzufügt, sollte er in der virtuellen Bibliothek des Benutzers erscheinen". Dies half uns, sicherzustellen, dass die Funktion so entwickelt wurde, dass sie für den Benutzer intuitiv und nützlich war.\n\nNachdem wir die Funktion getestet und überarbeitet hatten, veröffentlichten wir diese schließlich auf unserer Glaskugel-Website. Unsere treuen Leser waren begeistert von der neuen Funktion und so könnt ihr eure Comics auch in der Glaskugel speichern und lesen.',
    category: "Behavior-Driven-Development",
    cover:
      "https://www.expat-news.com/wp-content/uploads/2019/09/Forschung-2.jpeg",
    date: "February 20, 2022",
  },
  {
    id: 22,
    title: "GIT",
    desc: 'Ein Theaterstück ist ein interessantes Szenario, um die Konzepte von Git zu erklären. Das Theaterstück, das das Team produziert, heißt "Der Ritter und die Prinzessin" und handelt von einem Ritter, der um die Hand einer Prinzessin kämpft. Das Team besteht aus dem Regisseur, dem Bühnenbildner, dem Kostümdesigner, den Schauspielern und dem Beleuchter.\n\nDer Regisseur, Max, hat das Konzept für das Theaterstück entwickelt und ist verantwortlich dafür, dass das Stück auf die Bühne gebracht wird. Er arbeitet eng mit dem Bühnenbildner, Tom, zusammen, um die Bühnenausstattung zu planen und zu entwerfen. Tom nutzt Git, um die Entwürfe auf eine zentrale Plattform hochzuladen und sie mit dem Rest des Teams zu teilen.\n\nDer Kostümdesigner, Sarah, ist verantwortlich für die Entwicklung der Kostüme für die Schauspieler. Sie nutzt ebenfalls Git, um die Entwürfe und Schnittmuster auf die Plattform hochzuladen und sie mit dem Rest des Teams zu teilen. Die Schauspieler, Mary und Anton, geben ihre Kleidergrößen bekannt und Sarah nutzt diese Informationen, um die Kostüme anzupassen. Die Fans des Theaterstücks können sich die Schnittmuster herunterladen und diese nachbauen, während die Lieferanten von Stoffen Feedback geben, um die Kostüme zu verbessern.\n\nDer Beleuchter, Peter, arbeitet eng mit dem Regisseur zusammen, um die Beleuchtung für das Theaterstück zu planen. Er nutzt Git, um die Beleuchtungspläne auf die Plattform hochzuladen und sie mit dem Rest des Teams zu teilen.\n\nWährend der Proben und der Vorstellungen arbeitet das Team eng zusammen, um sicherzustellen, dass alles reibungslos verläuft. Jeder bearbeitet und aktualisiert seine Arbeit mit Git, um sicherzustellen, dass alle auf dem neuesten Stand sind.\n\nEines Tages tritt jedoch ein Problem auf: Der Server, auf dem die zentrale Plattform von Git gehostet wird, fällt aus. Das Team muss schnell handeln, um eine Lösung zu finden. Sie entscheiden sich dafür, eine lokale Kopie der Arbeit jedes Mitglieds anzulegen, um sicherzustellen, dass sie weiterarbeiten können, während das Problem behoben wird. Sobald der Server wieder online ist, pusht das Team seine Arbeit zurück auf die zentrale Plattform, um sicherzustellen, dass alle auf dem neuesten Stand sind.\n\nEine andere Herausforderung tritt auf, als das Team beschließt, eine neue Funktion hinzuzufügen: Eine spektakuläre Szene, in der der Ritter auf einem Pferd eine beeindruckende Showeinlage vorführt. Der Bühnenbildner Tom und der Beleuchter Peter arbeiten eng zusammen, um die Szene zu entwerfen und zu planen. Sie nutzen Git, um ihre Arbeit auf die zentrale Plattform hochzuladen und sie mit dem Rest des Teams zu teilen.\n\nDas Theaterstück hat schließlich seine Uraufführung und wird von Publikum und Kritikern gleichermaßen gefeiert. Das Team ist stolz darauf, was es erreicht hat und dankbar für die Verwendung von Git, das ihnen ermöglicht hat, ihre Arbeit effektiv zu organisieren und zu teilen. Sie gehen auf Tournee und spielen das Stück in verschiedenen Städten. Durch die Verwendung von Git konnten sie schnell auf Probleme reagieren und Änderungen umsetzen, was zu einer erfolgreichen Tournee beigetragen hat.',
    category: "GIT",
    cover:
      "https://nyu-dataservices.github.io/Intro-Git-GitHub/imgs/git-logo.png",
    date: "February 20, 2022",
  },
  {
    id: 23,
    title: "GIT-Hub",
    desc: 'So viele von euch waren interessiert an einem tieferen Einblick in unsere Glaskugelabteilung, dass wir uns entschlossen haben, euch von einem typischen Alltag von Fredie unserem Praktikanten zu erzählen.Abgesehen davon, dass Fredie ein kurioser Typ ist welcher jeden Morgen Kirschsaft mit einer Kirsch-Sahnetorte verspeist, lernt er täglich von unseren Mitarbeitern etwas Neues.\n\nHeute erklärt ihm Christoph, wie er an Projekten in der Glaskugelwelt zeitgleich mit Susan arbeiten kann ohne dass sie, die selbe Glaskugel benutzen.\n\nDafür nutzt er das Programm Zoo (Git), in welchen es sehr viele Themengebiete gibt mit ganz speziellen Tieren.\n\nDa gibt es die Nashörner welche komische Projekte für die Bauindustrie entwerfen, die kurioser Weise funktionieren.Dadurch konnte letztens erst ein Haus ganz ohne Bauarbeiter gebaut werden, verrückt.Oder die Faultiere, sie lieben es in ihren Häusern und Betten zu sein und wollen sich möglichst nicht bewegen.Dafür haben sie intelligente Zwuckzwack erschaffen, nützliche Wesen die gerne einfache Aufgaben wie das Putzen oder das Anschalten vom Licht übernehmen.Sollten diese keine Aufgabe haben, schlafen sie sofort ein, ähnlich ihren Erschaffern.\n\nChristoph und Susan arbeiten aktuell an einem Bewertungssystem für unsere Comicsammlung in der Glaskugelwelt.Da Susan aber manchmal etwas langsamer als Christoph ist und beide verschiedene Musik beim Arbeiten hören ist es gut dass wir den Zoo haben.\n\nAber wie funktioniert das ganze?Ganz simpel, wenn Christoph mit einem Teil des Projektes fertig ist, muss er folgendes tun.Er zieht sein Projektteil in einen Wagon des Zoozugs (git add), manchmal braucht er dabei Unterstützung durch Elefanten wenn er einmal wieder besonders hart gearbeitet hat und muss beim Zoowärter ein Ticket lösen damit dieser weiß, wohin er den Wagon liefern muss (git commit).\n\nIst dies alles geschehen, kann der Zug zu dem passenden Gehege fahren (git push ins Repository), wo die Affenarbeiter schon warten, um Christophs neuen Part in das Projekt zu integrieren.Will er aber dann das ganze Projekt einsehen oder das Projekt mit dem neuen Teilstück von ihm oder Susan, so muss er dies einfach nur sagen und der Zoowärter kommt mit seinem Sonderzug gezogen von der Dicker Bertha, einer großen Dampflokomotive angefahren (git pull).\n\nDa das Bewertungssystem neu ist und noch dran gearbeitet wird ist es auch noch gut abgedeckt von einer Plane (private Repository) und wenn Christoph und Susan fertig sind wird diese entfernt, dass alle ihre harte Arbeit bestaunen können (public Repository).Dann kommen meist sehr viele Leute mit Bananen, um den Affenarbeitern zu danken.\n\nFredie ist beeindruckt als Christoph ihm das alles erzählt und träumte in der Nacht von Affen mit Bananen und Zoowärten.',
    category: "GIT-Hub",
    cover:
      "https://www.googlewatchblog.de/wp-content/uploads/github-logo.jpeg",
    date: "February 20, 2022",
  },
  {
    id: 24,
    title: "Reddit",
    desc: 'Hallo ihr Lieben, heute möchte ich euch etwas mehr über Roman erzählen.\n\nRoman ist einer unser bester Mitarbeiter in der Glaskugelabteilung.Es ist immer pünktlich und begeistert sich auch in seiner Freizeit für die Glaskugelwelt und ihre Orte, wie der Pyramide, dem Zoo und vielen weiteren.\n\nEine weitere Leidenschaft von ihm ist das Erzählen und Schreiben von Witzen über Arbeitsthemen, mit denen er jedem Menschen ein Lächeln zaubert.\n\nLeider kann sein Freund, Pierfrancesco diese nie hören, da er taub geboren wurde.\n\nDeshalb hatte Roman eine Idee, wie wäre es wenn er Bilder mit Witzen verbindet damit man diese sehen und lesen kann und jeder Mensch über seine Witze lachen kann.Gesagt, getan nach einem halben Jahr intensiver Arbeit, hatte er es geschafft.\n\n Das Comedyhaus, von allen Lachhausen (Reddit) genannt wurde in der Glaskugelwelt gefeiert, wodurch Roman von einem auf den anderen Moment ein Star wurde.Er kündigte und wurde Vollzeit-Comedian aber das Wichtigste für ihn war, dass sein Freund Pierfrancesco über seine Witze lachen konnte.',
    category: "Reddit",
    cover:
      "https://static.adweek.com/adweek.com-prod/wp-content/uploads/2019/10/Reddit-Logo-Horizontal.png",
    date: "February 20, 2022",
  },
  {
    id: 25,
    title: "Stackoverflow",
    desc: 'In einer Welt voller verschiedener Glaskugeln, gibt es ebenso verschiedene Menschen mit verschiedenen Meinungen.\n\nZwei davon sind Marc und Eslam.\n\nEslam ist ein Mitarbeiter unserer Glaskugelabteilung der immer einen guten Witz parat hat.\n\n Marc arbeitet dagegen in der berühmten Eiscremefabrik: "Penguins", in welcher er sich um die Glaskugeln und Maschinen kümmert.Letztens hatte Marc während der Arbeit eine Frage zum Thema Glaskugeljustierung, welche ihn das Glaskugelnetzwerk (Internet) nicht beantworten konnte.Er wusste Eslam kannte sich deutlich besser damit aus aber wollte nicht Stunden warten bis sein Arbeitstag beendet war.Zum Glück gab es in der Glaskugelwelt, die Pyramide (Stackoverflow) ein Ort, an welchem die hellsten Köpfe Fragen beantworteten und andere deren Antworten kommentieren, korrigieren und lesen konnten für alle Zeiten.\n\nEslam war dort einer der Weisesten und Marc wusste, dass Eslam sein Problem dort schon einmal beantwortet hatte.Nach langem Suchen fand er die Frage zu seinem Problem, ein gewisser Halim hatte sie gestellt und Eslam hatte geantwortet.Dadurch gelang es Marc die Glaskugeln zu justieren und fügte einige Verbesserungen hinzu, welche er in der Pyramide hinterlegte.Dadurch kann auch zukünftig anderen geholfen werden und glücklich ging Marc Nachhause.',
    category: "Stackoverflow",
    cover:
      "https://cdn.dribbble.com/users/1249/screenshots/2247671/stackoverflow.png",
    date: "February 20, 2022",
  },
  {
    id: 26,
    title: "Merge-Konflikte",
    desc: '',
    category: "Merge-Konflikte",
    cover:
      "http://www.codeadventurer.de/wp-content/uploads/2015/04/Funktionsaufruf.jpg",
    date: "February 20, 2022",
  },
];
